name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate Git Hash for versioning
        id: git-hash
        run: echo "::set-output name=GIT_HASH::$(git rev-parse --short HEAD)"

      - name: Build Docker image with Git hash as version
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-app:${{ steps.git-hash.outputs.GIT_HASH }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/node-app:${{ steps.git-hash.outputs.GIT_HASH }}

      - name: Tag and push "latest" version
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/node-app:${{ steps.git-hash.outputs.GIT_HASH }} ${{ secrets.DOCKER_USERNAME }}/node-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/node-app:latest

      - name: Setup Git Config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com

      - name: update yaml with git hash
        run: |
          GIT_HASH=$(git rev-parse --short HEAD)
          echo "GIT_HASH=$GIT_HASH" >> $GITHUB_ENV

      - name: Change git_hash in deployment.yaml
        run: |
          sed -i "s|<GIT_HASH>|$GIT_HASH|g" deployment.yaml


